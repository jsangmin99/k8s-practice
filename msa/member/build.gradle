plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    postgresql
//    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.23'
//    runtimeOnly 'org.postgresql:postgresql' // 추가

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//    security의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'

//    jwt의존성 추가
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

//    redis의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

//    hibernate spatial
    implementation 'org.springframework.boot:spring-boot-starter-validation'

//    파일처리를 위한 aws 의존성 추가
    implementation 'software.amazon.awssdk:s3:2.17.58'

//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}
ext{
    set('springCloudVersion', '2021.0.8')
}

dependencyManagement{
    imports{
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
