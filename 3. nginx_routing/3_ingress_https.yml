apiVersion: apps/v1
kind: Deployment

metadata:
  name: nginx-deployment
  namespace: sm

spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-nginx
  template:
    metadata:
      labels:
        app: my-nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: sm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80 # service Port를 의미,
      targetPort: 80 #service가 라우팅해줄 대상의 port
  selector:
    app: my-nginx



---
# 쿠버네티스에서 https 인증서 적용 절차
# 1. cert-manager 설치
  # 1-1. cert-manager 생성을 위한 cert-manager namespace 생성 : kubectl create namespace cert-manager
  # 1-2. helm 패키지 매니저 설치(로컬) : 구글 검색후 다운로드우 내 로컬(맥북)에 설치 
  # 1-3. helm repo 추가(로컬) : helm repo add jetstack https://charts.jetstack.io
  # 1-4. helm repo 업데이트(로컬) : helm repo update
  # 1-5. helm 을 통해 cert-manager 설치 : helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v1.5.0 --set installCRDs=true

# 2. ClusterIssuer 생성 )
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: sm
spec:
  acme:
  # 인증서 서버 주소. 해당 서버의 리소스를 통해 인증서 발행
    server: https://acme-v02.api.letsencrypt.org/directory
    #인증서의 사용자
    email: jsangmin99@gmail.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

# 3. Certificate 생성
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: server.devhot.kr-tls
  namespace: sm
spec:
  secretName: server.devhot.kr-tls 
  duration: 2160h  # 90일동안 유효함
  renewBefore: 360h # 15일 전에 갱신된다.
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: server.devhot.kr
  dnsNames:
  - server.devhot.kr
  
# 4. Ingress에 TLS 적용
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-nginx-ingress
  namespace: sm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - server.devhot.kr
    secretName: server.devhot.kr-tls  
  rules:
    - host: server.devhot.kr
      http:
        paths:
          - path: /product-service/(.*)
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80
          - path: /order-service/(.*)
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80